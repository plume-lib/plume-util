plugins {
  // To create a fat jar build/libs/plume-util-all.jar, run: ./gradlew shadowJar
  id "com.github.johnrengelman.shadow" version "2.0.4"
  // Run the Error Prone linter.
  id "net.ltgt.errorprone-base" version "0.0.16"
  // Formating is disabled due to poor handling of type annotations; wait until
  // this issue is fixed: https://github.com/google/google-java-format/issues/5
  // // Code formatting with Google Java Format; defines targets "goJF" and "verJF".
  // id "com.github.sherter.google-java-format" version "0.7.1"
}

apply plugin: 'java-library'

// Checker Framework pluggable type-checking
apply from: "${buildscript.sourceFile.parent}/gradle/checkerframework.gradle"

// To upload to Maven Central, see instructions in the file.
apply from: "${buildscript.sourceFile.parent}/gradle/mavencentral.gradle"

dependencies {
  implementation 'org.plumelib:signature-util:0.0.4'
  testImplementation 'junit:junit:4.12'
  errorprone 'com.google.errorprone:error_prone_core:2.3.1'
}

repositories {
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Turn Javadoc warnings into errors.
javadoc {
  options.addStringOption('Xwerror', '-Xdoclint:all')
  // Can't enable private because WeakIdentityHashMap.java doesn't have exhaustive Javadoc comments
  // options.addStringOption('private', '-quiet')
}

task javadocWeb(type: Javadoc) {
  source = sourceSets.main.allJava
  destinationDir = file("/cse/web/research/plumelib/plume-util/api")
  classpath = project.sourceSets.main.compileClasspath
}

// `requireJavadoc` target ensures that all Java elements have Javadoc documentation.
configurations {
  requireJavadoc
}
dependencies {
  implementation group: 'org.plumelib', name: 'require-javadoc', version: '0.0.7'
}
task requireJavadoc(type: Javadoc) {
  destinationDir.deleteDir()
  source = sourceSets.main.allJava
  classpath = project.sourceSets.main.compileClasspath
  // TODO: uncomment.  "requireJavadoc" has no effect over "javadoc" while this line is commented.
  options.memberLevel = JavadocMemberLevel.PRIVATE
  options.docletpath = project.sourceSets.main.compileClasspath as List
  options.doclet = "org.plumelib.javadoc.RequireJavadoc"
  options.addStringOption('skip', 'WeakIdentityHashMap|WeakHasherMap')
}

/* Make Emacs TAGS table */
task tags(type: Exec) {
  description "Run etags to create an Emacs TAGS table"
  commandLine "bash", "-c", "find src/ -name '*.java' | sort | xargs etags"
}
